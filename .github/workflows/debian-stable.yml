---
name: Debian Stable
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
jobs:
  core:
    name: Build Debian NGINX stable Docker image
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Sanitize repo slug
        uses: actions/github-script@v6
        id: repo_slug
        with:
          result-encoding: string
          script: return 'ghcr.io/${{ github.repository_owner }}'.toLowerCase()

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse NGINX stable version
        id: version
        run: |
          echo "::set-output name=major::$(cat stable/debian/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $1 }')"
          echo "::set-output name=minor::$(cat stable/debian/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $2 }')"
          echo "::set-output name=patch::$(cat stable/debian/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $3 }')"

      - name: Build and push NGINX stable Debian image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64, linux/arm/v5, linux/arm/v7, linux/arm64, linux/mips64le, linux/ppc64le, linux/s390x
          context: "{{ defaultContext }}:stable/debian"
          tags: ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}, ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:stable, ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}
          push: true
          cache-from: type=gha,scope=stable
          cache-to: type=gha,mode=max,scope=stable

  perl:
    name: Build Debian NGINX stable perl Docker image
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Sanitize repo slug
        uses: actions/github-script@v6
        id: repo_slug
        with:
          result-encoding: string
          script: return 'ghcr.io/${{ github.repository_owner }}'.toLowerCase()

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse NGINX stable version
        id: version
        run: |
          echo "::set-output name=major::$(cat stable/debian-perl/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $1 }')"
          echo "::set-output name=minor::$(cat stable/debian-perl/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $2 }')"
          echo "::set-output name=patch::$(cat stable/debian-perl/Dockerfile | awk '$1 == "ENV" && $2 == "NGINX_VERSION" { print $3 }' |  awk -F. '{ print $3 }')"

      - name: Build and push NGINX stable perl Debian image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64, linux/arm/v5, linux/arm/v7, linux/arm64, linux/386, linux/mips64le, linux/ppc64le, linux/s390x
          context: "{{ defaultContext }}:mainline/debian-perl"
          tags: ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}-perl, ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:stable-perl, ${{ steps.repo_slug.outputs.result }}/nginx-unprivileged:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}-perl
          push: true
          cache-from: type=gha,scope=stable-perl
          cache-to: type=gha,mode=max,scope=stable-perl
